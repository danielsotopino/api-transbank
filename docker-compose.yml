version: '3.8'

services:
  api:
    build: .
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_ENCRYPT_KEY=${DATABASE_ENCRYPT_KEY}
      - REDIS_URL=${REDIS_URL}
      - TRANSBANK_ENVIRONMENT=${TRANSBANK_ENVIRONMENT}
      - TRANSBANK_COMMERCE_CODE=${TRANSBANK_COMMERCE_CODE}
      - TRANSBANK_API_KEY=${TRANSBANK_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=${ENVIRONMENT}
      - DEBUG=${DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
      - SERVICE_NAME=${SERVICE_NAME}
      - SERVICE_VERSION=${SERVICE_VERSION}
      - RATE_LIMIT_INSCRIPTION=${RATE_LIMIT_INSCRIPTION}
      - RATE_LIMIT_TRANSACTION=${RATE_LIMIT_TRANSACTION}
      - RATE_LIMIT_QUERY=${RATE_LIMIT_QUERY}
    depends_on:
      - db
      - redis
    volumes:
      - ./app:/app/app
    restart: unless-stopped
    env_file:
      - .env

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    env_file:
      - .env

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    env_file:
      - .env

  # Optional: Database management UI
  adminer:
    image: adminer
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    depends_on:
      - db
    restart: unless-stopped
    env_file:
      - .env

volumes:
  postgres_data:
  redis_data: